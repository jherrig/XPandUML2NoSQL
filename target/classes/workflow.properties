#The basedir you want to use
basedir = .

#The outlet to use to store code artifacts
outlet.src.dir =${basedir}/demo/src/generated/java

# The outlet to use to store non-code artifacts (configurations, sql-files and so on)
outlet.res.dir =${basedir}/demo/src/generated/resources

#The outlet to store code artifacts with protected regions. 
outlet.src.protected.dir = ${basedir}/demo/src/protected/java

#The outlet to store non-code artifacts with protected regions. 
outlet.res.protected.dir = ${basedir}/demo/src/protected/resources

#The outlet to use to store code artifacts. At this the generator will checking
#whether the artifact to generate already exists. If yes the generation of this
#artifact will be skipped.
outlet.src.once.dir = ${basedir}/demo/src/generated/once

#Here you can enter the path to the xmi file you want to use for code-generation
#You can point to the packed xmi: argouml_model.zargo, poseidon_model.zuml
#The topcase reference model
#model.file = ${basedir}/model/example.uml
model.file =  ${basedir}/model/model.uml

javabasic.profile.file = ${basedir}/profile/javabasic.profile.uml

primitives.profile.file = ${basedir}/profile/primitives.profile.uml

#The expression used to find the modelelement and template to start with
expandExpression = xpand::Root::Root FOR model

#The log4j configuration to use
log4jConfigFile=${basedir}/src/main/config/log4j.properties

#The path to file to use as dump file
dumpfile=${basedir}/dump.dump

#The strategy used to handle operations from an interface in emplementing classes
#Possible values:
#use_abstract_method - generate a abstract method in the abstract implementation class
#none - do not generate an abstract method
interface.operation.implementation.strategy = 'use_abstract_method'

#The strategy used to handle operations at non-stereotyped classes
#Possible values:
#protected-regions - use Protected Regions
#none - generate only the default return value
classes.operation.implementation.strategy = 'none'

type.header.text = '/* Universität Leipzig */'

type.footer.text = '/* End of File */'

java.version = 8

file.encoding = 'UFT-8'

#file.encoding.output = UFT-8
file.encoding.output = 'ISO-8859-1'

annotation.source.key = 'http://www.fornax-platform.org/documentation[documentation],\
	http://www.topcased.org/documentation[documentation]'

generate.additional.collection.methods = 'false'

javabasic.generateSerialVersionUIDField = 'true'
javabasic.use_overridden_equals_hashcode_toStringField = 'true'

# Possible Values are: order | unique
javabasic.list_set_propertyField = 'order'

classes.operation.implementation.strategy = 'protected-regions'

javabasic.entities = ''