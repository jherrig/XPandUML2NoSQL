«EXTENSION xtend::Helper»
«EXTENSION xtend::Properties»
«EXTENSION xtend::Names»
«EXTENSION xtend::SerialVersionUID»
«EXTENSION xtend::DataType»
«EXTENSION xtend::AssociationHelper»


«DEFINE springNeoClass FOR uml::Class»
	«FILE "SDN/"+name +".java"»
		«EXPAND classContentSimple FOR this»
	«ENDFILE»
	«FILE "SDN/"+name+"Repository.java"»
		«EXPAND repoContent FOR this»
	«ENDFILE»
«ENDDEFINE»

«DEFINE classContentSimple FOR uml::Class»
import org.neo4j.ogm.annotation.GraphId;
import org.neo4j.ogm.annotation.NodeEntity;
import org.neo4j.ogm.annotation.Relationship;
import org.neo4j.ogm.annotation.Property;
@NodeEntity
public «IF isAbstract» abstract «ENDIF-» class «name»
«EXPAND Generalization::generalization»
«EXPAND Realization::realization»{
    @GraphId
    private Long id;
	
	//regular class properties as designed
	«EXPAND annotatedProps FOREACH getAllProperties().select(e|e.association == null)-»
    «EXPAND annotatedRels FOREACH getAllProperties()-»        
    «EXPAND Attribute::staticAttribute-»
    
    //standard constructor 
    public «name»(){
    }
    
	
	//getter+setter
	«EXPAND Attribute::getterSetter»
}
«ENDDEFINE»

«DEFINE annotatedProps FOR uml::Property»
	@Property
	«EXPAND Attribute::field FOR this-»
«ENDDEFINE»

«DEFINE annotatedStaticProps FOR uml::Class»
	@Property
	«EXPAND Attribute::staticAttribute FOR this-»
«ENDDEFINE»

«DEFINE annotatedRels FOR uml::Property-»
	«IF this.isAssociation()-»
		«IF this.isOutgoing()-»
		@Relationship(type= "«this.association.name»")
		«EXPAND Association::field FOR this-»
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE-»

«DEFINE repoContent FOR uml::Class»
import org.springframework.data.neo4j.repository.GraphRepository;
import org.springframework.data.repository.CrudRepository;
public interface «name»Repository extends GraphRepository<«name»>{
}
«ENDDEFINE»