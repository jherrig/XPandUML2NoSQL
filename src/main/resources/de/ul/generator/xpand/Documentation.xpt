«EXTENSION xtend::Helper»
«EXTENSION xtend::DataType»

/**
* Creates the JavaDoc for an uml::Classifier
*/
«DEFINE documentation FOR uml::Classifier»
	/**
	«formatComment2JavaDoc("* ")»
	*/
«ENDDEFINE»

/**
* Creates the JavaDoc for an uml::Property
*/
«DEFINE documentation FOR uml::Property»
	/** 
	«formatComment2JavaDoc("* ")»
	*/
«ENDDEFINE»

/**
* Creates the JavaDoc for an uml::Property
*/
«DEFINE documentation FOR uml::EnumerationLiteral»
	/** 
	«formatComment2JavaDoc("* ")»
	*/
«ENDDEFINE»

/**
* Creates the JavaDoc for the a getter of an uml::Property
*/
«DEFINE documentationGetter FOR uml::Property»
	/**
	«formatComment2JavaDoc("* ")»
	* @return The «name» as <code>«type.fqName()»</code>
	*/
«ENDDEFINE»

/**
* Creates the JavaDoc for the a setter of an uml::Property
*/
«DEFINE documentationSetter FOR uml::Property»
  	/**
  	«formatComment2JavaDoc("* ")»
  	* @param «name» The «name» to set
  	*/
«ENDDEFINE»

/**
* Creates the JavaDoc for the a getter of an uml::Association
* @param property The uml::Property to generate the documentation for
*/
«DEFINE documentationAssociationGetter(uml::Property property) FOR uml::Association»
	/**
	«formatComment2JavaDoc("* ")»
	* @return The «property.type.name.toFirstLower()» as <code>«getPropertyType(property)»</code>
  	*/
«ENDDEFINE»

/**
* Creates the JavaDoc for the a getter of an uml::Association
* @param name The name of the association end
* @param isOrdered Is the end ordered or unordered modelled?
* @deprecated Use <code>documentationAssociationGetter(uml::Property) instead</code>
*/
«DEFINE documentationAssociationGetter(String name, boolean isOrdered) FOR uml::Association»
	/**
	«formatComment2JavaDoc("* ")»
	* @return The «name» as <code>«IF isOrdered»java.util.List«ELSE»java.util.Set«ENDIF»</code>
  	*/
«ENDDEFINE»

/**
* Creates the JavaDoc for the a getter of an uml::Association
* @param name The name of the association end
* @param type The type of the association end
* @deprecated Use <code>documentationAssociationGetter(uml::Property) instead</code>
*/
«DEFINE documentationAssociationGetter(String name, uml::Type type) FOR uml::Association»
	/**
	«formatComment2JavaDoc("* ")»
	* @return The «name» as <code>«type.fqName()»</code>
  	*/
«ENDDEFINE»

/**
* Creates the JavaDoc for the a setter of an uml::Association
* @param property The uml::Property to generate the documentation for
*/
«DEFINE documentationAssociationSetter(uml::Property property) FOR uml::Association»
	/**
	«formatComment2JavaDoc("* ")»
	* @param «property.type.name.toFirstLower()» The <code>«getPropertyType(property)»</code> to set
  	*/
«ENDDEFINE»

/**
* Creates the JavaDoc for the a setter of an uml::Association
* @param name The name of the association end
* @param isOrdered Is the end ordered or unordered modelled?
* @deprecated Use <code>documentationAssociationSetter(uml::Property) instead</code>
*/
«DEFINE documentationAssociationSetter(String name, boolean isOrdered) FOR uml::Association»
	/**
	«formatComment2JavaDoc("* ")»
	* @param «name» The «name» as <code>«IF isOrdered»java.util.List«ELSE»java.util.Set«ENDIF»</code> to set
  	*/
«ENDDEFINE»

/**
* Creates the JavaDoc for the a getter of an uml::Association
* @param name The name of the association end
* @param type The type of the association end
* @deprecated Use <code>documentationAssociationSetter(uml::Property) instead</code>
*/
«DEFINE documentationAssociationSetter(String name, uml::Type type) FOR uml::Association»
	/**
	«formatComment2JavaDoc("* ")»
	* @param «name» The <code>«type.fqName()»</code> to set
  	*/
«ENDDEFINE»

/**
* Creates the JavaDoc for the a adder of an uml::Association
* @param property The uml::Property to generate the documentation for
*/
«DEFINE documentationAssociationAdder(uml::Property property) FOR uml::Association»
	/**
	«formatComment2JavaDoc("* ")»
	* @param «property.type.name.toFirstLower()» The <code>«property.type.fqName()»</code> to set
  	*/
«ENDDEFINE»

/**
* Creates the JavaDoc for the a removeFrom of an uml::Association
* @param property The uml::Property to generate the documentation for
*/
«DEFINE documentationAssociationRemoveFrom(uml::Property property) FOR uml::Association»
	/**
	«formatComment2JavaDoc("* ")»
	* @param «property.type.name.toFirstLower()» The <code>«property.type.fqName()»</code> to remove
  	*/
«ENDDEFINE»

/**
* Creates the JavaDoc for the a removeAll of an uml::Association
* @param property The uml::Property to generate the documentation for
*/
«DEFINE documentationAssociationRemoveAll(uml::Property property) FOR uml::Association»
	/**
	«formatComment2JavaDoc("* ")»
	* Removes all items out of the «getCollectionType(property)» of <code>«property.type.fqName()»</code>
  	*/
«ENDDEFINE»

/**
* Creates the JavaDoc for the an uml::Operation
*/
«DEFINE documentation FOR uml::Operation»
	/** 
	«formatComment2JavaDoc("* ")»
	«FOREACH ownedParameter.select(e|!e.equalsParameterDirection("return")) AS p-»
	«p.formatParameterComment2JavaDoc("* ", "param")»
	«ENDFOREACH-»
	«IF !isVoid(getReturnResult())»
		«getReturnResult().formatParameterComment2JavaDoc("* ", "return")»
	«ENDIF-»
	*/
«ENDDEFINE»